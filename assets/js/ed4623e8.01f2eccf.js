(self.webpackChunkleetcode_notes_doc=self.webpackChunkleetcode_notes_doc||[]).push([[8736],{3905:function(e,r,t){"use strict";t.d(r,{Zo:function(){return u},kt:function(){return m}});var n=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},u=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(t),m=i,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return t?n.createElement(f,o(o({ref:r},u),{},{components:t})):n.createElement(f,o({ref:r},u))}));function m(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=p;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=t[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},6738:function(e,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return c},default:function(){return u}});var n=t(2122),i=t(9756),a=(t(7294),t(3905)),o={sidebar_label:"LinkedList",sidebar_position:3},l={unversionedId:"lai-algorithm/linkedList",id:"lai-algorithm/linkedList",isDocsHomePage:!1,title:"linkedList",description:"Reverse LinkedList",source:"@site/docs/lai-algorithm/linkedList.md",sourceDirName:"lai-algorithm",slug:"/lai-algorithm/linkedList",permalink:"/algorithm-sharpify/docs/lai-algorithm/linkedList",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/lai-algorithm/linkedList.md",version:"current",sidebar_label:"LinkedList",sidebarPosition:3,frontMatter:{sidebar_label:"LinkedList",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"recursion1",permalink:"/algorithm-sharpify/docs/lai-algorithm/recursion1"},next:{title:"binary tree",permalink:"/algorithm-sharpify/docs/lai-algorithm/binary tree"}},c=[{value:"Reverse LinkedList",id:"reverse-linkedlist",children:[{value:"Iterative way",id:"iterative-way",children:[]},{value:"Recurion Way",id:"recurion-way",children:[]}]}],s={toc:c};function u(e){var r=e.components,t=(0,i.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"reverse-linkedlist"},"Reverse LinkedList"),(0,a.kt)("h3",{id:"iterative-way"},"Iterative way"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public ListNode reverseLinkedList(ListNode head) {\n    if(head == null || head.next == null) {\n        return head;\n    }\n\n    ListNode curr = head;\n    ListNode prev = null;\n\n    while(curr != null) {\n        ListNode next = curr.next;\n        curr.next = prev;\n        prev = curr;\n        curr = next;\n    }\n\n    return prev;\n}\n")),(0,a.kt)("h3",{id:"recurion-way"},"Recurion Way"),(0,a.kt)("p",null,"review: "),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"function call itself"),(0,a.kt)("li",{parentName:"ol"},"devide bigger problem to a smaller subproblems"),(0,a.kt)("li",{parentName:"ol"},"coding level how to connect subproblems")),(0,a.kt)("p",null,"For this question"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public ListNode reverseLinkedList(ListNode head) {\n    if(head == null || head.next == null) {\n        return head;\n    }\n    \n    ListNode newHead = reverseLinked(head.next);\n    head.next.next = head;\n    head.next = null;\n    return newHead;\n}\n\n")))}u.isMDXComponent=!0}}]);