(self.webpackChunkleetcode_notes_doc=self.webpackChunkleetcode_notes_doc||[]).push([[7928],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return b}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(t),b=i,m=d["".concat(l,".").concat(b)]||d[b]||p[b]||o;return t?r.createElement(m,a(a({ref:n},u),{},{components:t})):r.createElement(m,a({ref:n},u))}));function b(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3780:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return a},metadata:function(){return s},toc:function(){return l},default:function(){return u}});var r=t(2122),i=t(9756),o=(t(7294),t(3905)),a={sidebar_label:"76 Longest Palindromic Subsequence",sidebar_position:76},s={unversionedId:"blind-curated-75/76 longest palindromic subsequence",id:"blind-curated-75/76 longest palindromic subsequence",isDocsHomePage:!1,title:"516. Longest Palindromic Subsequence",description:"Given a string s, find the longest palindromic subsequence's length in s.",source:"@site/docs/blind-curated-75/76 longest palindromic subsequence.md",sourceDirName:"blind-curated-75",slug:"/blind-curated-75/76 longest palindromic subsequence",permalink:"/algorithm-sharpify/docs/blind-curated-75/76 longest palindromic subsequence",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/blind-curated-75/76 longest palindromic subsequence.md",version:"current",sidebar_label:"76 Longest Palindromic Subsequence",sidebarPosition:76,frontMatter:{sidebar_label:"76 Longest Palindromic Subsequence",sidebar_position:76},sidebar:"tutorialSidebar",previous:{title:"647. Palindromic Substrings",permalink:"/algorithm-sharpify/docs/blind-curated-75/75 palindromic substrings"},next:{title:"Question",permalink:"/algorithm-sharpify/docs/blind-curated-75/recommend businesses yelp oa1"}},l=[{value:"Solution",id:"solution",children:[]}],c={toc:l};function u(e){var n=e.components,t=(0,i.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Given a string s, find the longest palindromic subsequence's length in s."),(0,o.kt)("p",null,"A subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 1:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Input: s = "bbbab"\nOutput: 4\nExplanation: One possible longest palindromic subsequence is "bbbb".\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 2:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Input: s = "cbbd"\nOutput: 2\nExplanation: One possible longest palindromic subsequence is "bb".\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Constraints:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"1 <= s.length <= 1000")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"s consists only of lowercase English letters."))),(0,o.kt)("h2",{id:"solution"},"Solution"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"solution for this question")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"}," public class Solution {\n    public int longestPalindromeSubseq(String s) {\n        int[][] dp = new int[s.length()][s.length()];\n        \n        for (int i = s.length() - 1; i >= 0; i--) {\n            dp[i][i] = 1;\n            for (int j = i+1; j < s.length(); j++) {\n                if (s.charAt(i) == s.charAt(j)) {\n                    dp[i][j] = dp[i+1][j-1] + 2;\n                } else {\n                    dp[i][j] = Math.max(dp[i+1][j], dp[i][j-1]);\n                }\n            }\n        }\n        return dp[0][s.length()-1];\n    }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"class Solution {\n    public int characterReplacement(String s, int k) {\n        int[] freq = new int[26];\n        int mostFreqLetter = 0;\n        int left = 0;\n        int max = 0;\n        \n    }\n}\n")))}u.isMDXComponent=!0}}]);