(self.webpackChunkleetcode_notes_doc=self.webpackChunkleetcode_notes_doc||[]).push([[1267],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(g,o(o({ref:t},s),{},{components:n})):r.createElement(g,o({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3875:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return c},toc:function(){return l},default:function(){return s}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o={sidebar_label:"72 Longest Repeating Character Replacement",sidebar_position:72},c={unversionedId:"blind-curated-75/72 longest repeating character replacement",id:"blind-curated-75/72 longest repeating character replacement",isDocsHomePage:!1,title:"424. Longest Repeating Character Replacement",description:"You are given a string s and an integer k. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most k times.",source:"@site/docs/blind-curated-75/72 longest repeating character replacement.md",sourceDirName:"blind-curated-75",slug:"/blind-curated-75/72 longest repeating character replacement",permalink:"/algorithm-sharpify/docs/blind-curated-75/72 longest repeating character replacement",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/blind-curated-75/72 longest repeating character replacement.md",version:"current",sidebar_label:"72 Longest Repeating Character Replacement",sidebarPosition:72,frontMatter:{sidebar_label:"72 Longest Repeating Character Replacement",sidebar_position:72},sidebar:"tutorialSidebar",previous:{title:"417. Pacific Atlantic Water Flow",permalink:"/algorithm-sharpify/docs/blind-curated-75/71 pacific atlantic water flow"},next:{title:"647. Palindromic Substrings",permalink:"/algorithm-sharpify/docs/blind-curated-75/75 palindromic substrings"}},l=[{value:"Solution",id:"solution",children:[]}],p={toc:l};function s(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"You are given a string s and an integer k. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most k times."),(0,i.kt)("p",null,"Return the length of the longest substring containing the same letter you can get after performing the above operations."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 1:"),"\n",(0,i.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2021/06/08/waterflow-grid.jpg",alt:"pacific and atlantic ocean"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Input: heights = [[1,2,2,3,5],[3,2,3,4,4],[2,4,5,3,1],[6,7,1,4,5],[5,1,1,2,4]]\nOutput: [[0,4],[1,3],[1,4],[2,2],[3,0],[3,1],[4,0]]\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 2:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Input: heights = [[2,1],[1,2]]\nOutput: [[0,0],[0,1],[1,0],[1,1]]\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Constraints:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"m == heights.length")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"n == heights[r].length")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1 <= m, n <= 200")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"0 <= heights[r][c] <= 105"))),(0,i.kt)("h2",{id:"solution"},"Solution"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"solution for this question")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"}," public int characterReplacement(String s, int k) {\n        int len = s.length();\n        int[] count = new int[26];\n        int start = 0, maxCount = 0, maxLength = 0;\n        for (int end = 0; end < len; end++) {\n            maxCount = Math.max(maxCount, ++count[s.charAt(end) - 'A']);\n            while (end - start + 1 - maxCount > k) {\n                count[s.charAt(start) - 'A']--;\n                start++;\n            }\n            maxLength = Math.max(maxLength, end - start + 1);\n        }\n        return maxLength;\n    }\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"class Solution {\n    public int characterReplacement(String s, int k) {\n        int[] freq = new int[26];\n        int mostFreqLetter = 0;\n        int left = 0;\n        int max = 0;\n        \n    }\n}\n")))}s.isMDXComponent=!0}}]);