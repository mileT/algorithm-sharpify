(self.webpackChunkleetcode_notes_doc=self.webpackChunkleetcode_notes_doc||[]).push([[464],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),g=u(n),h=a,d=g["".concat(l,".").concat(h)]||g[h]||p[h]||i;return n?r.createElement(d,o(o({ref:t},c),{},{components:n})):r.createElement(d,o({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},6185:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return s},toc:function(){return l},default:function(){return c}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o={sidebar_label:"Longest Substring without repeating characters",sidebar_position:2},s={unversionedId:"blind-curated-75/2 longest substring without repeating characters",id:"blind-curated-75/2 longest substring without repeating characters",isDocsHomePage:!1,title:"1. Two Sum",description:"Given a string s, find the length of the longest substring without repeating characters.",source:"@site/docs/blind-curated-75/2 longest substring without repeating characters.md",sourceDirName:"blind-curated-75",slug:"/blind-curated-75/2 longest substring without repeating characters",permalink:"/algorithm-sharpify/docs/blind-curated-75/2 longest substring without repeating characters",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/blind-curated-75/2 longest substring without repeating characters.md",version:"current",sidebar_label:"Longest Substring without repeating characters",sidebarPosition:2,frontMatter:{sidebar_label:"Longest Substring without repeating characters",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Docusaurus Tutorial Intro",permalink:"/algorithm-sharpify/docs/blind-curated-75/9 merge k sorted lists"},next:{title:"Docusaurus Tutorial Intro",permalink:"/algorithm-sharpify/docs/blind-curated-75/3 longest palindromic substring"}},l=[{value:"Solution",id:"solution",children:[{value:"Java",id:"java",children:[]}]}],u={toc:l};function c(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Given a string s, find the length of the longest substring without repeating characters."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 1:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'Input: s = "abcabcbb"\nOutput: 3\nExplanation: The answer is "abc", with the length of 3.\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 2:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'Input: s = "bbbbb"\nOutput: 1\nExplanation: The answer is "b", with the length of 1.\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 3:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'Input: s = "pwwkew"\nOutput: 3\nExplanation: The answer is "wke", with the length of 3.\nNotice that the answer must be a substring, "pwke" is a subsequence and not a substring.\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 4:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'Input: s = ""\nOutput: 0\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Constrains:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"0 <= s.length <= 5 * 104"),(0,i.kt)("li",{parentName:"ul"},"s consists of English letters, digits, symbols and spaces.")),(0,i.kt)("h2",{id:"solution"},"Solution"),(0,i.kt)("h3",{id:"java"},"Java"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"class Solution {\n    public int lengthOfLongestSubstring(String s) {\n        if(s.length == 0) return 0;\n        HashMap<Character, Integer> map = new HashMap<Character, Integer>();\n        int max = 0;\n        for(int i = 0, j = 0; i < s.length(); i++) {\n            if(map.containsKey(s.charAt(i))) {\n                j = Math.max(j, map.get(s.charAt(i)) + 1);\n            }\n            map.put(s.charAt(i), i);\n            max = Math.max(max, i - j + 1);\n        }\n        return max;\n    }\n}\n")))}c.isMDXComponent=!0}}]);