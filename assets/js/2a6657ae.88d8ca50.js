(self.webpackChunkleetcode_notes_doc=self.webpackChunkleetcode_notes_doc||[]).push([[6103],{3905:function(n,e,t){"use strict";t.d(e,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var s=r.createContext({}),u=function(n){var e=r.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):l(l({},e),n)),t},p=function(n){var e=u(n.components);return r.createElement(s.Provider,{value:e},n.children)},c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,a=n.originalType,s=n.parentName,p=o(n,["components","mdxType","originalType","parentName"]),d=u(t),m=i,g=d["".concat(s,".").concat(m)]||d[m]||c[m]||a;return t?r.createElement(g,l(l({ref:e},p),{},{components:t})):r.createElement(g,l({ref:e},p))}));function m(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var a=t.length,l=new Array(a);l[0]=d;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=n,o.mdxType="string"==typeof n?n:i,l[1]=o;for(var u=2;u<a;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8485:function(n,e,t){"use strict";t.r(e),t.d(e,{frontMatter:function(){return l},metadata:function(){return o},toc:function(){return s},default:function(){return p}});var r=t(2122),i=t(9756),a=(t(7294),t(3905)),l={sidebar_label:"5. Longest Palindromic Substring",sidebar_position:3},o={unversionedId:"blind-curated-75/3 longest palindromic substring",id:"blind-curated-75/3 longest palindromic substring",isDocsHomePage:!1,title:"5. Longest Palindromic Substring",description:"Given a string s, return the longest palindromic substring in s.",source:"@site/docs/blind-curated-75/3 longest palindromic substring.md",sourceDirName:"blind-curated-75",slug:"/blind-curated-75/3 longest palindromic substring",permalink:"/algorithm-sharpify/docs/blind-curated-75/3 longest palindromic substring",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/blind-curated-75/3 longest palindromic substring.md",version:"current",sidebar_label:"5. Longest Palindromic Substring",sidebarPosition:3,frontMatter:{sidebar_label:"5. Longest Palindromic Substring",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"1. Two Sum",permalink:"/algorithm-sharpify/docs/blind-curated-75/2 longest substring without repeating characters"},next:{title:"11. Container With Most Water",permalink:"/algorithm-sharpify/docs/blind-curated-75/4 container with most water"}},s=[{value:"Solution",id:"solution",children:[{value:"Expand Around Center",id:"expand-around-center",children:[]},{value:"Dynamic Programming",id:"dynamic-programming",children:[]}]}],u={toc:s};function p(n){var e=n.components,t=(0,i.Z)(n,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Given a string s, return the longest palindromic substring in s."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 1:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'Input: s = "babad"\nOutput: "bab"\nNote: "aba" is also a valid answer.\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 2:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'Input: s = "cbbd"\nOutput: "bb"\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 3:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'Input: s = "a"\nOutput: "a"\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 4:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'Input: s = "ac"\nOutput: "a"\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Constrains:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= s.length <= 1000")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"s")," consist of only digits and English letters.")),(0,a.kt)("h2",{id:"solution"},"Solution"),(0,a.kt)("h3",{id:"expand-around-center"},"Expand Around Center"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'class Solution {\n    public String longestPalindrome(String s) {\n        if(s == null || s.length() < 1) return "";\n        int start = 0, len = 0;\n        for(int i = 0; i < s.length(); i++) {\n            int len1 = expandAroundCenter(s, i, i);\n            int len2 = expandAroundCenter(s, i, i + 1);\n            if(len < Math.max(len1, len2)) {\n                start = (len1 > len2) ? (i - len1 / 2) : (i - len2 / 2 + 1);\n                len = Math.max(len1, len2);\n            }\n        }\n        return s.substring(start,  start + len);\n        \n    }\n    \n    private int expandAroundCenter(String s, int left, int right) {\n        int L = left, R = right;\n        while(L >= 0 && R < s.length() && s.charAt(L) == s.charAt(R)) {\n            L--;\n            R++;\n        }\n        return R - L - 1;\n    }\n}\n')),(0,a.kt)("h3",{id:"dynamic-programming"},"Dynamic Programming"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"dp(i, j)")," represents whether ",(0,a.kt)("inlineCode",{parentName:"p"},"s(i ... j)")," can form a palindromic substring, ",(0,a.kt)("inlineCode",{parentName:"p"},"dp(i, j)")," is true when ",(0,a.kt)("inlineCode",{parentName:"p"},"s(i)")," equals to ",(0,a.kt)("inlineCode",{parentName:"p"},"s(j)")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"s(i+1 ... j-1)")," is a palindromic substring. When we found a palindrome, check if it's the longest one. Time complexity O(n^2)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public String longestPalindrome(String s) {\n    int n = s.length();\n    String result = null;\n    boolean[][] dp = new boolean[n][n];\n\n    for(int i = n - 1; i >= 0; i--) {\n        for(int j = i; j < n; j++) {\n            dp[i][j] = s.charAt(i) == s.charAt(j) && (j - i < 3 || dp[i + 1][j - 1]);\n\n            if(dp[i][j] && (result == null || j - i + 1 > result.length())) {\n                result = s.substring(i, j + 1);\n            }\n        }\n    }\n    return result;\n}\n")))}p.isMDXComponent=!0}}]);